@model Spice.Models.ViewModels.OrderListViewModel
@using Spice.Utilities
@{
    ViewData["Title"] = "Order History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />
<div class="border backgroundWhite">
    <div class="row">
        <div class="col-6">
            <h2 class="text-info"> Past Order List</h2>
        </div>
        @*<div class="col-6 text-right">
                <partial name="_CreateButtonPartial" />
            </div>*@
    </div>
    <br />
    <div>
        @if (Model.Orders.Count() > 0)
        {
            //@Html.DisplayNameFor() ==> just displays the name or display name value of a property in amodel or view model

            //so to access a model object and display its name or displayname attribute value, we do the following
            //1. for IEnumerable collection i.e if the model was an IEnumerable, then displaynamefor @Html.DisplayNameFor(model => model.propertyname) because we cannot use indexing to target items as shown below

            //because we are using IEnumerable which does not allow indexing as a means of accessing the items it has in its collection is like this @Html.DisplayNameFor(model => model.Orders.OrderHeader.Id)
            //where Orders is the IEnumerable but for the line of code above, only the first item is taken

            //
            //model or m represent the @model coming into the view which in our case is OrderListViewModel
            //this model has a List<OrderDetailsViewModel> which is a collection where the OrderHeader and List<OrderDetails> can be accessed via indexing. so to target the Id property of OrderHeader Model, check the code below:
            //@Html.DisplayNameFor(model => model.Orders[0].OrderHeader.Id)
            //as opposed to IEnumerable<OrderDetailsViewModel> which could have been @Html.DisplayNameFor(model => model.Orders.OrderHeader.Id)
            //Orders is IList so to access one of the elements
            <table class="table table-striped border">
                <tr class="table-secondary">
                    <th>
                        @Html.DisplayNameFor(model => model.Orders[0].OrderHeader.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickupName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.ApplicationUser.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickUpTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.OrderTotal)
                    </th>
                    <th>
                        Total Items
                    </th>
                    <th now>Action</th>

                </tr>
                @foreach (var item in Model.Orders)
                {
                    <tr>
                        <td style="white-space: nowrap">
                            @Html.DisplayFor(m => item.OrderHeader.Id)
                        </td>
                        <td style="white-space: nowrap">
                            @Html.DisplayFor(m => item.OrderHeader.PickupName)
                        </td>
                        <td style="white-space: nowrap">
                            @Html.DisplayFor(m => item.OrderHeader.ApplicationUser.Email)
                        </td>
                        <td style="white-space: nowrap">
                            @Html.DisplayFor(m => item.OrderHeader.PickUpTime)
                        </td>
                        <td style="white-space: nowrap">

                            @Html.DisplayFor(m => item.OrderHeader.OrderTotal)
                        </td>
                        <td style="white-space: nowrap">
                            @Html.DisplayFor(m => item.OrderDetails.Count)
                        </td>
                        <td style="white-space: nowrap">
                            <button type="submit" class="btn btn-success anchorDetail" data-id="@item.OrderHeader.Id" data-toggle="modal">
                                <i class="far fa-list-alt"></i> Details
                            </button>
                            
                            @if (item.OrderHeader.Status == SD.StatusSubmitted || item.OrderHeader.Status == SD.StatusInProcess || item.OrderHeader.Status == SD.StatusCompleted || item.OrderHeader.Status == SD.StatusReady)
                            {
                                <button type="button" class="btn btn-info btnOrderStatus" data-id="@item.OrderHeader.Id" data-toggle="modal">
                                    <i class="far fa-clock"></i> Status
                                </button>
                            }
                        </td>
                    </tr>
                }
            </table>
            <div page-model="@Model.PagingInfo" page-classes-enabled="true" page-class="btn border"
                     page-class-normal="btn btn-light" page-class-selected="btn btn-info active"
                     class="btn-group float-right">
            </div>
            
            <br />
        }
        else
        {
            <p>You have no order history yet...</p>
        }
    </div>
</div>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog-centered modal-dialog" role="document" style="max-width:70% !important">
        <div class="modal-content">
            <div class="modal-header bg-success text-light justify-content-center">
                <h5 class="modal-title">Order Details</h5>
            </div>
            <div class="modal-body justify-content-center" id="myModalContent">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" style="width:20%" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myOrderStatus" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document"  style="max-width:70% !important">
        <div class="modal-content">
            <div class="modal-header bg-info text-light justify-content-center">
                <h5 class="modal-title">Order Status </h5>
            </div>
            <div class="modal-body justify-content-center" id='myOrderStatusContent'>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" style="width:20%" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts
    {
    <script>
        var PostBackURL = '/Customer/Order/GetOrderDetails';
        var OrderStatusURL = '/Customer/Order/GetOrderStatus';
        //ways i can pass data from front end to back end
        //via body as data
        //via url as a parameter or query string
        //via the header
        $(function () {
            $(".anchorDetail").click(function () {
                var id = $(this).attr('data-id');
          
                $.ajax({
                    type: "GET",
                    //url: PostBackURL+"/"+id, ==>passed as a param and the other way is via the body
                    url: PostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: {"Id":id},
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                });
            });
            $(".btnOrderStatus").click(function () {
                var id = $(this).attr('data-id');
                
                $.ajax({
                    type: "GET",
                    url: OrderStatusURL,
                    contentType: "text/html; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myOrderStatusContent').html(data);
                        $('#myOrderStatus').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            });
        });
    </script>
}